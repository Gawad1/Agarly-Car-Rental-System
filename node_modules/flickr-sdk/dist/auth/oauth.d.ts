import type { Auth } from "../types";
import { Params } from "../params";
export interface OAuthConfig {
    consumerKey: string;
    consumerSecret: string;
    oauthToken: string | false;
    oauthTokenSecret: string | false;
}
export interface OAuthAuthParams {
    oauth_nonce: string;
    oauth_timestamp: string;
    oauth_consumer_key: string;
    oauth_signature_method: string;
    oauth_version: string;
}
export declare class OAuthAuth implements Auth {
    private oauthToken;
    private oauthTokenSecret;
    private oauth;
    constructor(consumerKey: string, consumerSecret: string, oauthToken: string | false, oauthTokenSecret: string | false);
    sign(method: "GET" | "POST", url: string, params: Params): Promise<void>;
    signature(method: string, url: string, params: Record<string, string>): string;
    static isOAuthConfig(config: any): config is OAuthConfig;
}
