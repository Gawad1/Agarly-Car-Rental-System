import type { Auth, Transport } from "./types";
import { APIKeyAuth } from "./auth/api_key";
import { OAuthAuth, OAuthConfig } from "./auth/oauth";
import { FlickrService, Flickr } from "./services/rest";
import { OAuthService } from "./services/oauth";
import { Upload, UploadService } from "./services/upload";
import { Replace, ReplaceService } from "./services/replace";
import { FetchTransport } from "./transport/fetch";
export interface FlickrServices {
    flickr: Flickr;
    upload: Upload;
    replace: Replace;
}
export interface FlickrServicesWithOAuth extends FlickrServices {
    oauth: OAuthService;
}
export declare function createFlickr(apiKey: string, transport?: Transport): FlickrServices;
export declare function createFlickr(oauthConfig: OAuthConfig, transport?: Transport): FlickrServicesWithOAuth;
export declare function createFlickr<A extends Auth = Auth>(auth: A, transport?: Transport): A extends OAuthAuth ? FlickrServicesWithOAuth : FlickrServices;
export type { Flickr, Auth, Transport };
export { FlickrService, UploadService, ReplaceService, FetchTransport, APIKeyAuth, OAuthAuth, OAuthService, };
export * from "./services/rest/api";
export { OAuth } from "./oauth";
export { Params, GET, POST } from "./params";
export { XMLParser } from "./parser/xml";
export { JSONParser } from "./parser/json";
export { FormParser } from "./parser/form";
export { NullAuth } from "./auth/null";
export { MockTransport } from "./transport/mock";
